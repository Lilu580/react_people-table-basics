{"version":3,"sources":["components/NavigationLink/NavigationLink.tsx","components/Nav/Nav.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/TableElement/TableElement.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["NavigationLink","link","title","to","className","isActive","classNames","Nav","role","HomePage","Loader","PersonLink","slug","name","sex","TableElement","born","died","mother","motherName","father","fatherName","personId","href","PeopleTable","people","findParrent","parrentName","find","person","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","useEffect","getPeopleFromServer","peopleFromServer","length","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"4QASaA,EAAkC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtD,OACE,cAAC,IAAD,CACEC,GAAIF,EACJG,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,SAOGH,GAGN,EClBYK,EAAgB,WAC3B,OACE,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEH,KAAK,IACLC,MAAM,SAGR,cAAC,EAAD,CACED,KAAK,UACLC,MAAM,iBAMjB,ECxBYO,EAAqB,WAChC,OACE,oBAAIL,UAAU,QAAd,sBAEH,E,sBCJYM,G,MAAS,kBACpB,qBAAKN,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCQTO,EAA8B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACxD,OACE,cAAC,IAAD,CACEX,GAAE,kBAAaS,GACfR,UAAWE,IAAW,CAAE,kBAA2B,MAARQ,IAF7C,SAIGD,GAGN,ECDYE,EAAgC,SAAC,GAaxC,IAXFF,EAWC,EAXDA,KACAC,EAUC,EAVDA,IACAE,EASC,EATDA,KACAC,EAQC,EARDA,KACAC,EAOC,EAPDA,OACAC,EAMC,EANDA,WACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,WACAT,EAGC,EAHDA,KACAU,EAEC,EAFDA,SAGF,OACE,qBACE,UAAQ,SACRlB,UAAWE,IAAW,CACpB,yBAA0BM,IAASU,IAHvC,UAME,6BACE,mBAAGC,KAAK,gCAAR,SACE,cAAC,EAAD,CACEV,KAAMA,EACNC,IAAKA,EACLF,KAAMA,QAKZ,6BAAKE,IACL,6BAAKE,IACL,6BAAKC,IACL,6BACGC,EAEG,cAAC,EAAD,CACEL,KAAMK,EAAOL,KACbC,IAAKI,EAAOJ,IACZF,KAAMM,EAAON,OAGfO,GAAc,MAEpB,6BACGC,EAEG,cAAC,EAAD,CACEP,KAAMO,EAAOP,KACbC,IAAKM,EAAON,IACZF,KAAMQ,EAAOR,OAGfS,GAAc,QAIzB,ECnEYG,EAA+B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQH,EAAe,EAAfA,SAC/CI,EAAc,SAACC,GACnB,OAAOF,EAAOG,MAAK,SAAAC,GAAM,OAAIA,EAAOhB,OAASc,CAApB,KAAoC,IAC9D,EAED,OACE,wBACE,UAAQ,cACRvB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGqB,EAAOK,KAAI,SAAAD,GAAM,OAChB,cAAC,EAAD,CAEEhB,KAAMgB,EAAOhB,KACbC,IAAKe,EAAOf,IACZE,KAAMa,EAAOb,KACbC,KAAMY,EAAOZ,KACbC,OAAQQ,EAAYG,EAAOV,YAC3BA,WAAYU,EAAOV,WACnBC,OAAQM,EAAYG,EAAOR,YAC3BA,WAAYQ,EAAOR,WACnBT,KAAMiB,EAAOjB,KACbU,SAAUA,GAVLO,EAAOjB,KAFE,QAkBzB,ECxCM,SAASmB,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCPM,IAAMQ,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOhB,EAAP,KAAeiB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAsBC,cAAdnC,YAAR,MAAe,GAAf,EAoBA,OAlBAoC,qBAAU,WACRJ,GAAa,GAEb,IAAMK,EAAmB,iDAAG,uHAEOlB,IAFP,OAElBmB,EAFkB,OAIxBR,EAAUQ,GAJc,gDAMxBJ,GAAW,GANa,yBAQxBF,GAAa,GARW,4EAAH,qDAYzBK,GACD,GAAE,IAGD,qCACE,oBAAI7C,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGuC,EAEG,cAAC,EAAD,IAEA,cAAC,EAAD,CACElB,OAAQA,EACRH,SAAUV,IAIfiC,GACC,mBAAG,UAAQ,qBAAqBzC,UAAU,kBAA1C,kCAKkB,IAAlBqB,EAAO0B,SAAiBR,GACxB,mBAAG,UAAQ,kBAAX,sDAQX,EC5DYS,EAAyB,WACpC,OACE,oBAAIhD,UAAU,QAAd,2BAEH,ECCYiD,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UAEE,cAAC,EAAD,IAEA,sBAAMjD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEkD,KAAK,IACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUpD,GAAG,IAAIqD,SAAO,MAEnC,eAAC,IAAD,CAAOF,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAE/B,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,cAAC,EAAD,eAtBF,ECCnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.7e777237.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  link: string,\n  title: string\n};\n\nexport const NavigationLink: React.FC<Props> = ({ link, title }) => {\n  return (\n    <NavLink\n      to={link}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { NavigationLink } from '../NavigationLink';\n\nexport const Nav: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavigationLink\n            link=\"/\"\n            title=\"Home\"\n          />\n\n          <NavigationLink\n            link=\"/people\"\n            title=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  slug: string\n  name: string\n  sex: string\n};\n\nexport const PersonLink: React.FC<Props> = ({ slug, name, sex }) => {\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  name: string\n  sex: string\n  born: number\n  died: number\n  mother: Person | null\n  motherName: string | null\n  father: Person | null\n  fatherName: string | null\n  slug: string\n  personId: string | number\n};\n\nexport const TableElement: React.FC<Props> = (\n  {\n    name,\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n    slug,\n    personId,\n  },\n) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personId,\n      })}\n    >\n      <td>\n        <a href=\"#/people/jan-van-brussel-1714\">\n          <PersonLink\n            name={name}\n            sex={sex}\n            slug={slug}\n          />\n        </a>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <PersonLink\n              name={mother.name}\n              sex={mother.sex}\n              slug={mother.slug}\n            />\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonLink\n              name={father.name}\n              sex={father.sex}\n              slug={father.slug}\n            />\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { TableElement } from '../TableElement';\n\ntype Props = {\n  people: Person[]\n  personId: string\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, personId }) => {\n  const findParrent = (parrentName: string | null) => {\n    return people.find(person => person.name === parrentName) || null;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <TableElement\n            key={person.slug}\n            name={person.name}\n            sex={person.sex}\n            born={person.born}\n            died={person.died}\n            mother={findParrent(person.motherName)}\n            motherName={person.motherName}\n            father={findParrent(person.fatherName)}\n            fatherName={person.fatherName}\n            slug={person.slug}\n            personId={personId}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getPeopleFromServer = async () => {\n      try {\n        const peopleFromServer = await getPeople();\n\n        setPeople(peopleFromServer);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? (\n              <Loader />\n            ) : (\n              <PeopleTable\n                people={people}\n                personId={slug}\n              />\n            )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(people.length === 0 && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Nav } from './components/Nav';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <Nav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<PageNotFound />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}